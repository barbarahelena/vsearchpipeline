{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/vsearchpipeline/master/nextflow_schema.json",
    "title": "nf-core/vsearchpipeline pipeline parameters",
    "description": "vsearch pipeline for 16s microbiota data",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "primers": {
                    "type": "string",
                    "fa_icon": "fas fa-file-csv",
                    "description": "Path to comma-separated file containing forward_primer and reverse_primer sequences"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                }
            }
        },
        "vsearch_options": {
            "title": "VSEARCH options",
            "type": "object",
            "description": "Options for fastqmerge, fastqfilter, cluster_unoise, uchime and usearch_global processes",
            "default": "",
            "properties": {
                "merge_allowmergestagger": {
                    "type": "boolean",
                    "description": "Fastq merge process: : allow merging of staggered read pairs.",
                    "help_text": "When using --fastq_mergepairs, allow merging of staggered read pairs. Staggered pairs\nare pairs where the 3\u2019 end of the reverse read has an overhang to the left of the 5\u2019 end\nof the forward read. This situation can occur when a very short fragment is sequenced.\nThe 3\u2019 overhang of the reverse read is not included in the merged sequence. The oppo-\nsite option is the --fastq_nostagger option. The default is to discard staggered pairs.",
                    "fa_icon": "fas fa-hashtag"
                },
                "merge_maxdiffs": {
                    "type": "integer",
                    "default": 30,
                    "help_text": "When using --fastq_mergepairs, specify the maximum number of non-matching nu-\ncleotides allowed in the overlap region. That option has a strong influence on the merg-\ning success rate. The default value is 10.",
                    "description": "Fastq merge process: Discard input sequences with more bases difference than specified",
                    "fa_icon": "fas fa-exchange-alt"
                },
                "merge_minlen": {
                    "type": "integer",
                    "default": 0,
                    "description": "Fastq merge process: Discard input sequences shorter than the specified number of bases",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "merge_maxlen": {
                    "type": "integer",
                    "default": 0,
                    "description": "Fastq merge process: Discard sequences longer than the specified number of bases",
                    "fa_icon": "fas fa-ruler-vertical"
                },
                "filter_maxee": {
                    "type": "integer",
                    "default": 1,
                    "description": "Filtering process: Discard sequences with an expected error greater than the specified number",
                    "fa_icon": "fas fa-times"
                },
                "filter_maxns": {
                    "type": "integer",
                    "default": 0,
                    "description": "Filtering process: Discard sequences with more than the specified number of N\u2019s.",
                    "fa_icon": "fas fa-sort-numeric-down"
                },
                "filter_minlen": {
                    "type": "integer",
                    "default": 0,
                    "description": "Filtering process: Discard sequences shorter than the specified length.",
                    "fa_icon": "fas fa-sort-numeric-down"
                },
                "filter_maxlen": {
                    "type": "integer",
                    "default": 0,
                    "description": "Filtering process: Discard sequences longer than the specified length.",
                    "fa_icon": "fas fa-sort-numeric-down"
                },
                "derep_strand": {
                    "type": "string",
                    "default": "plus",
                    "description": "Dereplicate process: plus or both strands",
                    "enum": ["plus", "both"],
                    "fa_icon": "fas fa-plus"
                },
                "derep_all_strand": {
                    "type": "string",
                    "default": "plus",
                    "description": "Dereplicate process all samples: plus or both strands",
                    "enum": ["plus", "both"],
                    "fa_icon": "fas fa-plus"
                },
                "derep_all_fastawidth": {
                    "type": "integer",
                    "default": 0,
                    "description": "Dereplicate process all samples:",
                    "fa_icon": "fas fa-arrows-alt-h"
                },
                "derep_all_minunique": {
                    "type": "integer",
                    "default": 2,
                    "description": "Dereplicate process all samples",
                    "fa_icon": "fas fa-fingerprint"
                },
                "cluster_minsize": {
                    "type": "integer",
                    "default": 8,
                    "description": "Clustering",
                    "fa_icon": "fas fa-compress-alt"
                },
                "cluster_alpha": {
                    "type": "integer",
                    "default": 2,
                    "description": "Clustering",
                    "fa_icon": "fas fa-font"
                },
                "uchime_label": {
                    "type": "string",
                    "default": "ASV_",
                    "description": "Chimera removal: labeling (prefix) of ASVs",
                    "fa_icon": "fas fa-tag"
                },
                "usearch_id": {
                    "type": "number",
                    "default": 0.97,
                    "description": "Usearch global: id parameter",
                    "fa_icon": "far fa-address-card"
                }
            },
            "fa_icon": "fas fa-search"
        },
        "tree_options": {
            "title": "Tree options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "treetool": {
                    "type": "string",
                    "default": "fasttree",
                    "help_text": "Default is FastTree ('fasttree'), alternative is IQTree ('iqtree')",
                    "enum": ["fasttree", "iqtree"],
                    "description": "Which tree building tool to use",
                    "fa_icon": "fas fa-dna"
                }
            },
            "fa_icon": "fab fa-pagelines"
        },
        "dada2_options": {
            "title": "DADA2 options",
            "type": "object",
            "description": "Options for DADA2 assigntaxonomy and addspecies",
            "default": "",
            "properties": {
                "dada2_minboot": {
                    "type": "integer",
                    "default": 80,
                    "description": "assignTaxonomy function: The minimum bootstrap confidence for assigning a taxonomic level.",
                    "fa_icon": "fas fa-terminal"
                },
                "dada2_allowmultiple": {
                    "type": "integer",
                    "default": 3,
                    "description": "addSpecies function: maximum number of multiple assigned species. If 0, this will be set at FALSE.",
                    "fa_icon": "fas fa-cubes"
                },
                "dada2_tryrevcompl": {
                    "type": "boolean",
                    "default": true,
                    "description": "addSpecies function: If TRUE, the reverse-complement of each sequences will be used for classification if it is a better match to the reference sequences than the forward sequence.",
                    "fa_icon": "fas fa-arrow-left"
                }
            },
            "fa_icon": "fas fa-spell-check"
        },
        "phyloseq_options": {
            "title": "Phyloseq options",
            "type": "object",
            "description": "Options for phyloseq processes",
            "default": "",
            "properties": {
                "rarelevel": {
                    "type": "integer",
                    "default": 0,
                    "description": "Rarefaction level (not used if skip_rarefaction is not set at true)"
                }
            },
            "fa_icon": "fas fa-th-list"
        },
        "skip_options": {
            "title": "Skip options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "skip_primers": {
                    "type": "boolean",
                    "description": "Skip trimming of primers",
                    "fa_icon": "fas fa-forward"
                },
                "skip_tree": {
                    "type": "boolean",
                    "description": "Skip multiple sequence alignment and tree processes",
                    "fa_icon": "fas fa-forward"
                },
                "skip_rarefaction": {
                    "type": "boolean",
                    "description": "Skip rarefaction of phyloseq object",
                    "fa_icon": "fas fa-forward"
                },
                "skip_fixtaxonomy": {
                    "type": "boolean",
                    "description": "Skip process to make a table with composite taxonomy names",
                    "fa_icon": "fas fa-forward"
                },
                "skip_metrics": {
                    "type": "boolean",
                    "description": "Skip process to provide some general metrics of the phyloseq object (composition, diversity)",
                    "default": false,
                    "fa_icon": "fas fa-forward"
                }
            },
            "fa_icon": "fas fa-forward"
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/vsearch_options"
        },
        {
            "$ref": "#/definitions/tree_options"
        },
        {
            "$ref": "#/definitions/dada2_options"
        },
        {
            "$ref": "#/definitions/phyloseq_options"
        },
        {
            "$ref": "#/definitions/skip_options"
        }
    ]
}
